{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2861,"status":"ok","timestamp":1631028249479,"user":{"displayName":"Chibuzo Ugonabo","photoUrl":"","userId":"11527256917442907344"},"user_tz":240},"id":"9powAn2tXyiK","outputId":"7a4db566-efa3-44ff-b546-e878570534f5"},"outputs":[{"name":"stdout","output_type":"stream","text":["Requirement already satisfied: flask_ngrok in /usr/local/lib/python3.7/dist-packages (0.0.25)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from flask_ngrok) (2.23.0)\n","Requirement already satisfied: Flask\u003e=0.8 in /usr/local/lib/python3.7/dist-packages (from flask_ngrok) (1.1.4)\n","Requirement already satisfied: Werkzeug\u003c2.0,\u003e=0.15 in /usr/local/lib/python3.7/dist-packages (from Flask\u003e=0.8-\u003eflask_ngrok) (1.0.1)\n","Requirement already satisfied: Jinja2\u003c3.0,\u003e=2.10.1 in /usr/local/lib/python3.7/dist-packages (from Flask\u003e=0.8-\u003eflask_ngrok) (2.11.3)\n","Requirement already satisfied: click\u003c8.0,\u003e=5.1 in /usr/local/lib/python3.7/dist-packages (from Flask\u003e=0.8-\u003eflask_ngrok) (7.1.2)\n","Requirement already satisfied: itsdangerous\u003c2.0,\u003e=0.24 in /usr/local/lib/python3.7/dist-packages (from Flask\u003e=0.8-\u003eflask_ngrok) (1.1.0)\n","Requirement already satisfied: MarkupSafe\u003e=0.23 in /usr/local/lib/python3.7/dist-packages (from Jinja2\u003c3.0,\u003e=2.10.1-\u003eFlask\u003e=0.8-\u003eflask_ngrok) (2.0.1)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests-\u003eflask_ngrok) (2021.5.30)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,\u003c1.26,\u003e=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests-\u003eflask_ngrok) (1.24.3)\n","Requirement already satisfied: chardet\u003c4,\u003e=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests-\u003eflask_ngrok) (3.0.4)\n","Requirement already satisfied: idna\u003c3,\u003e=2.5 in /usr/local/lib/python3.7/dist-packages (from requests-\u003eflask_ngrok) (2.10)\n"]}],"source":["!pip install flask_ngrok"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":140,"status":"ok","timestamp":1631028249607,"user":{"displayName":"Chibuzo Ugonabo","photoUrl":"","userId":"11527256917442907344"},"user_tz":240},"id":"DIV1mgGRYeBP","outputId":"18b1ecd1-ad3b-4a04-ae00-ce164f894ae9"},"outputs":[{"name":"stdout","output_type":"stream","text":["Extracted Successfully\n"]}],"source":["import zipfile\n","from zipfile import ZipFile\n","\n","file_name = '/content/drive/Othercomputers/My Laptop/Enhance IT docs/NLP/demo/templates.zip'\n","\n","with ZipFile(file_name, 'r') as zip:\n","  zip.extractall()\n","  print('Extracted Successfully')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1631028249608,"user":{"displayName":"Chibuzo Ugonabo","photoUrl":"","userId":"11527256917442907344"},"user_tz":240},"id":"Y0-S52ZHcDfy","outputId":"2a27a9eb-f8ed-4735-a518-a5a0e6670777"},"outputs":[{"name":"stdout","output_type":"stream","text":["Extracted Successfully\n"]}],"source":["import zipfile\n","from zipfile import ZipFile\n","\n","file_name = '/content/drive/Othercomputers/My Laptop/Enhance IT docs/NLP/demo/static.zip'\n","\n","with ZipFile(file_name, 'r') as zip:\n","  zip.extractall()\n","  print('Extracted Successfully')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0NS2vCY-aG--"},"outputs":[],"source":["# TEMPLATE = '/content/drive/Othercomputers/My Laptop/Enhance IT docs/NLP/demo/templates'\n","# STATIC = '/content/drive/Othercomputers/My Laptop/Enhance IT docs/NLP/demo/static'"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":399,"status":"ok","timestamp":1631028250003,"user":{"displayName":"Chibuzo Ugonabo","photoUrl":"","userId":"11527256917442907344"},"user_tz":240},"id":"lGsiAi2NZ2U2","outputId":"a60dd8f3-6929-4aa3-ff57-7328fa3b03f4"},"outputs":[{"name":"stdout","output_type":"stream","text":["[nltk_data] Downloading package wordnet to /root/nltk_data...\n","[nltk_data]   Package wordnet is already up-to-date!\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n"]}],"source":["import flask\n","from flask import Flask, render_template, request\n","import pickle\n","import numpy as np\n","from flask_ngrok import run_with_ngrok\n","\n","import re, string, unicodedata  \n","import nltk\n","nltk.download('wordnet')\n","nltk.download('punkt')\n","from nltk.corpus import stopwords\n","nltk.download('stopwords')\n","from nltk.stem import WordNetLemmatizer\n","\n","import pandas as pd\n","import warnings\n","warnings.filterwarnings('ignore')\n","\n","app = Flask(__name__)\n","run_with_ngrok(app)\n","\n","DATA_PATH = \"/content/templates\"\n","infile = open(DATA_PATH+'/model.pkl','rb')\n","model = pickle.load(infile)\n","lemmatizer = WordNetLemmatizer()\n","#pre processing functions\n","def remove_non_ascii(words):\n","    \"\"\"Remove non-ASCII characters from list of tokenized words\"\"\"\n","    new_words = []\n","    for word in words:\n","        new_word = unicodedata.normalize('NFKD', word).encode('ascii', 'ignore').decode('utf-8', 'ignore')\n","        new_words.append(new_word)\n","    return new_words\n","\n","def to_lowercase(words):\n","    \"\"\"Convert all characters to lowercase from list of tokenized words\"\"\"\n","    new_words = []\n","    for word in words:\n","        new_word = word.lower()\n","        new_words.append(new_word)\n","    return new_words\n","\n","def remove_punctuation(words):\n","    \"\"\"Remove punctuation from list of tokenized words\"\"\"\n","    new_words = []\n","    for word in words:\n","        new_word = re.sub(r'[^\\w\\s]', '', word)\n","        if new_word != '':\n","            new_words.append(new_word)\n","    return new_words\n","\n","def remove_stopwords(words):\n","    \"\"\"Remove stop words from list of tokenized words\"\"\"\n","    new_words = []\n","    stops = stopwords.words('english')\n","    stops.append('said')\n","    stops.append('says')\n","    stops.append('npr')\n","    stops.append('time')\n","    stops.append('getty')\n","    stops.append('images')\n","    stops.append('caption')\n","    stops.append('hide')\n","    for word in words:\n","        if word not in stops:\n","            new_words.append(word)\n","    return new_words\n","\n","def lemmatize_list(words):\n","    new_words = []\n","    for word in words:\n","      new_words.append(lemmatizer.lemmatize(word, pos='v'))\n","    return new_words\n","def normalize(words):\n","\n","    words = remove_non_ascii(words)\n","    words = to_lowercase(words)\n","    words = remove_punctuation(words)\n","    words = remove_stopwords(words)\n","    words = lemmatize_list(words)\n","    return ''.join(words)\n","\n","#model = pickle.load(open('model.pkl', 'rb'))\n","# def pre_processing(text):#preprocesses the data\n","#     lemmatizer = WordNetLemmatizer()\n","#     text = text.lower()\n","#     text = re.sub('[0-9]+','num',text)\n","#     word_list = nltk.word_tokenize(text)\n","#     word_list =  [lemmatizer.lemmatize(item) for item in word_list]\n","#     return ' '.join(word_list)\n","\n","@app.route('/', methods=['GET'])\n","def home():\n","  return render_template('index.html')\n","\n","@app.route('/', methods=['GET', \"POST\"])\n","\n","def predict():\n","\n","  input_values = [str(x) for x in request.form.values()]\n","\n","  inp_features = [normalize(input_values)]\n","  prediction = model.predict(inp_features)\n"," \n","  return render_template('index.html', prediction_text='The topic of the article you entered is: {}'.format(prediction))\n"," "]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"qJywzMfbbRgp"},"outputs":[{"name":"stdout","output_type":"stream","text":[" * Serving Flask app \"__main__\" (lazy loading)\n"," * Environment: production\n","\u001b[31m   WARNING: This is a development server. Do not use it in a production deployment.\u001b[0m\n","\u001b[2m   Use a production WSGI server instead.\u001b[0m\n"," * Debug mode: off\n"]},{"name":"stderr","output_type":"stream","text":[" * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n"]},{"name":"stdout","output_type":"stream","text":[" * Running on http://9688-34-70-36-152.ngrok.io\n"," * Traffic stats available on http://127.0.0.1:4040\n"," * Running on http://9688-34-70-36-152.ngrok.io\n"," * Traffic stats available on http://127.0.0.1:4040\n"]},{"name":"stderr","output_type":"stream","text":["127.0.0.1 - - [07/Sep/2021 15:30:54] \"\u001b[37mGET / HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [07/Sep/2021 15:30:54] \"\u001b[37mGET /static/css/style.css HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [07/Sep/2021 15:30:55] \"\u001b[33mGET /favicon.ico HTTP/1.1\u001b[0m\" 404 -\n","127.0.0.1 - - [07/Sep/2021 15:30:59] \"\u001b[37mPOST / HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [07/Sep/2021 15:31:37] \"\u001b[37mPOST / HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [07/Sep/2021 15:31:48] \"\u001b[37mPOST / HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [07/Sep/2021 15:32:34] \"\u001b[37mPOST / HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [07/Sep/2021 15:34:48] \"\u001b[37mGET / HTTP/1.1\u001b[0m\" 200 -\n","127.0.0.1 - - [07/Sep/2021 15:34:49] \"\u001b[37mGET /static/css/style.css HTTP/1.1\u001b[0m\" 200 -\n"]}],"source":["app.run()\n","run_with_ngrok(app)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Fw5cAihrdbVO"},"outputs":[],"source":[""]}],"metadata":{"colab":{"authorship_tag":"ABX9TyMzP0Wu2WNE86wAi1UGHyty","mount_file_id":"1usxpR456CBsEhY0-VnpvAzDz_kn60yD9","name":"app.py","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}